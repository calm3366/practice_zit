git clone https://github.com/kubernetes-sigs/kubespray
cd kubespray
pip3 install -r requirements.txt
pip3 install jmespath

# –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –æ—à–∏–±–∫–∞ —Å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å—é python
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å virtualenv —Å –Ω—É–∂–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π Python, –ï—Å–ª–∏ —É —Ç–µ–±—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Python 3.11
python3.11 -m venv venv
source venv/bin/activate
# –∏–ª–∏ —É–¥–∞–ª—è–µ–º —Ö–≤–æ—Å—Ç—ã —Å—Ç–∞—Ä–æ–π –≤–µ—Ä—Å–∏–∏
sudo rm -rf /Library/Frameworks/Python.framework/Versions/3.9
sudo rm -rf "/Applications/Python 3.9"
sudo rm -f /usr/local/bin/python3.9
sudo rm -f /usr/local/bin/pip3.9
rm -rf ~/Library/Python/3.9
rm -rf ~/.local/lib/python3.9

vagrant up
vagrant reload --provision # –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π provisioners —Å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º VM
vagrant destroy -f # –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å Vagrant –æ–∫—Ä—É–∂–µ–Ω–∏—è

# –ø—Ä–∏ –æ—à–∏–±–∫–µ –≤–µ—Ä—Å–∏–∏ ansible - –æ–±–Ω–æ–≤–ª—è–µ–º
ansible-galaxy collection install ansible.posix # –ø—Ä–∏ –æ—à–∏–±–∫–µ 
ansible-galaxy collection install community.general
ansible-galaxy collection install kubernetes.core
ansible-galaxy collection install ansible.utils 
  /Applications/Python\ 3.11/Install\ Certificates.command # –≤—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–∏ –æ—à–∏–±–∫–µ
ansible-galaxy collection install community.crypto
cp kubespray/plugins/modules/kube.py kubespray/library/kube.py # –ø—Ä–∏ –æ—à–∏–±–∫–µ 


# üîó –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –¥–ª—è Kubespray
cp -rfp inventory/sample inventory/mycluster
# –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª inventory/mycluster/hosts.yaml


# üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kubernetes
ansible-playbook -i inventory/mycluster/hosts.yaml --become --become-user=root -u vagrant cluster.yml


# –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
mkdir -p ~/.kube
# cp inventory/mycluster/artifacts/admin.conf ~/.kube/config
vagrant ssh k8s-master -c "sudo cat /etc/kubernetes/admin.conf" > ~/.kube/config
kubectl get nodes
  sudo sed -i 's|https://127.0.0.1:6443|https://192.168.10.10:6443|' /etc/kubernetes/admin.conf # –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏














### –ù–∏–∂–µ –±—ã–ª–∏ –ø–æ–ø—ã—Ç–∫–∏


# üîó –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –¥–ª—è Kubespray
cp -rfp inventory/sample inventory/devops-cluster
# –û–±–Ω–æ–≤–∏ inventory/devops-cluster/inventory.ini, —É–∫–∞–∑–∞–≤ IP-–∞–¥—Ä–µ—Å–∞ –∏ —Ä–æ–ª–∏ —É–∑–ª–æ–≤
[kube_control_plane]
k8s-master ansible_host=192.168.10.10 ansible_user=vagrant
[kube_node]
k8s-worker1 ansible_host=192.168.10.11 ansible_user=vagrant
k8s-worker2 ansible_host=192.168.10.12 ansible_user=vagrant
[etcd]
k8s-master
[k8s_cluster:children]
kube_control_plane
kube_node
etcd



vim inventory/devops-cluster/group_vars/k8s_cluster/k8s-cluster.yml # –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏ –æ—à–∏–±–∫–µ —Å–≤—è–∑–∏ –º–∞—Å—Ç–µ—Ä–∞ —Å –≤–æ—Ä–∫–µ—Ä–∞–º–∏
loadbalancer_apiserver:
  address: 192.168.10.10
  port: 6443
kube_apiserver_ip: "192.168.10.10"
kubeadm_control_plane_endpoint: "192.168.10.10:6443"

# üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kubernetes
ansible-playbook -i inventory/devops-cluster/inventory.ini --become --become-user=root cluster.yml 

# –¥–æ—Å—Ç—É–ø –¥–æ –∫–ª–∞—Å—Ç–µ—Ä–∞
# –ö–æ–ø–∏—Ä—É–µ–º kubeconfig —Å k8s-master –Ω–∞ —Ö–æ—Å—Ç
vagrant ssh k8s-master -c "sudo cat /etc/kubernetes/admin.conf" > ~/.kube/config
kubectl get nodes





### –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
# —Å–±—Ä–æ—Å–∏—Ç—å k8s 
ansible-playbook -i inventory/devops-cluster/inventory.ini reset.yml --become --become-user=root
# –ø–æ—á–∏—Å—Ç–∏—Ç—å —Ä—É–∫–∞–º–∏ –Ω–∞ –∫–∞–∂–¥–æ–º —Ö–æ—Å—Ç–µ
ssh vagrant@192.168.10.10 
sudo kubeadm reset -f
sudo systemctl stop kubelet
sudo systemctl stop containerd
sudo rm -rf /etc/kubernetes
sudo rm -rf /var/lib/etcd
sudo rm -rf /var/lib/kubelet
sudo rm -rf /etc/cni
sudo rm -rf /opt/cni 
sudo rm -rf /var/lib/cni 
sudo rm -rf /run/kubernetes
sudo rm -rf ~/.kube
sudo rm -rf /etc/systemd/system/kubelet.service.d
sudo iptables -F && sudo iptables -t nat -F && sudo iptables -t mangle -F && sudo iptables -X
sudo systemctl restart containerd
sudo systemctl restart kubelet

# –µ—Å–ª–∏ –∑–∞–Ω—è—Ç—ã –ø–æ—Ä—Ç—ã –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
sudo systemctl stop kubelet
sudo ss -tulpn | grep -E '6443|10259|10257|10250'  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø–æ—Ä—Ç—ã –æ—Å–≤–æ–±–æ–¥–∏–ª–∏—Å—å 
  sudo kill <PID>
sudo rm -rf /etc/kubernetes
sudo rm -rf /var/lib/etcd
sudo rm -rf ~/.kube
sudo systemctl start kubelet


# —Å–æ–∑–¥–∞–µ–º –≤—Ä—É—á–Ω—É—é —Å–µ—Ä—Ç—ã –Ω–∞ –º–∞—Å—Ç–µ—Ä–µ –≤ /etc/kubernetes/pki/ –µ—Å–ª–∏ –Ω–µ —Å–æ–∑–¥–∞–ª–∏—Å—å –∞–≤—Ç–æ–º–∞—Ç–æ–º
sudo rm -rf /etc/kubernetes/ssl
sudo rm -rf /etc/kubernetes/pki
# –Ω–æ —Å–Ω–∞—á–∞–ª–∞ –∏–∑–º–µ–Ω–∏—Ç—å 
  sudo sed -i 's|controlPlaneEndpoint: "lb-apiserver.kubernetes.local:6443"|controlPlaneEndpoint: "192.168.10.10:6443"|' /etc/kubernetes/kubeadm-config.yaml
sudo kubeadm init phase certs all --config /etc/kubernetes/kubeadm-config.yaml


# —Å–æ–∑–¥–∞—Ç—å –≤—Ä—É—á–Ω—É—é –∫–æ–Ω—Ñ–∏–≥ - grep server /etc/kubernetes/admin.conf
sudo kubeadm init phase kubeconfig admin --config /etc/kubernetes/kubeadm-config.yaml
  sudo sed -i 's|https://lb-apiserver.kubernetes.local:6443|https://192.168.10.10:6443|' /etc/kubernetes/admin.conf
  echo "192.168.10.10 lb-apiserver.kubernetes.local" | sudo tee -a /etc/hosts

sudo kubeadm init --config /etc/kubernetes/kubeadm-config.yaml 
  vim /etc/kubernetes/manifests/kube-apiserver.yaml # –ø—Ä–æ–≤–µ—Ä–∫–∞
# sudo kubeadm init --apiserver-advertise-address=192.168.10.10 --pod-network-cidr=10.233.64.0/18
# –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫–∏
# sudo kubeadm init --apiserver-advertise-address=192.168.10.10 --pod-network-cidr=10.233.64.0/18 \
  # --ignore-preflight-errors=Port-10250,DirAvailable--var-lib-etcd



# –Ω–∞–∑–Ω–∞—á–∏—Ç—å kubernetes-admin –Ω—É–∂–Ω—ã–µ –ø—Ä–∞–≤–∞ —á–µ—Ä–µ–∑ RBAC /// –¥–∞—Å—Ç kubernetes-admin –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ä–µ—Å—É—Ä—Å–∞–º, –≤–∫–ª—é—á–∞—è secrets –≤ kube-system
sudo kubectl --kubeconfig=/etc/kubernetes/admin.conf create clusterrolebinding kubeadm-bootstrap-token \
  --clusterrole cluster-admin \
  --user kubernetes-admin


# —Å–æ–∑–¥–∞—Ç—å –≤—Ä—É—á–Ω—É—é —Ç–æ–∫–µ–Ω –Ω–∞ –º–∞—Å—Ç–µ—Ä–µ
sudo kubeadm token create --print-join-command
# kubeadm join 127.0.0.1:6443 --token r62ytv.slhk5opg2kume54h --discovery-token-ca-cert-hash sha256:ecaecc24d9306a1670d31e9901791c1befb36f2f0a6b10756f9d907855ce2497 